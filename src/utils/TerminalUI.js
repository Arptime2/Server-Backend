const readline = require('readline');function createTerminal(relayServer) {    const rl = readline.createInterface({        input: process.stdin,        output: process.stdout,        prompt: 'SERVER> '    });    const commands = {        list: () => {            const clients = relayServer.listClients();            console.log(clients.length > 0 ? 'Connected clients:\n' + clients.map(id => `- ${id}`).join('\n') : 'No clients connected.');        },        kick: (clientId) => {            if (!clientId) return console.log('Usage: kick <clientId>');            console.log(relayServer.disconnectClient(clientId) ? `Kicked ${clientId}.` : `Client ${clientId} not found.`);        },        broadcast: (message) => {            if (!message) return console.log('Usage: broadcast <message>');            relayServer.broadcast({ type: 'announcement', message });            console.log(`Broadcasted "${message}" to all clients.`);        },        msg: (clientId, ...messageParts) => {            const message = messageParts.join(' ');            if (!clientId || !message) return console.log('Usage: msg <clientId> <message>');            const client = relayServer.getClient(clientId);            if (client) {                client.send({ type: 'direct_message', from: 'server', message });                console.log(`Message sent to ${clientId}.`);            } else {                console.log(`Client ${clientId} not found.`);            }        },        help: () => {            console.log('Available commands:\n  list\n  kick <clientId>\n  broadcast <message>\n  msg <clientId> <message>\n  exit');        },        exit: () => {            console.log('Shutting down...');            relayServer.server.close();            rl.close();            process.exit(0);        }    };    rl.on('line', (line) => {        const [command, ...args] = line.trim().split(' ');        if (commands[command]) {            commands[command](...args);        } else {            console.log(`Unknown command: "${command}". Type "help".`);        }        rl.prompt();    });    function log(...args) {        readline.cursorTo(process.stdout, 0);        console.log(...args);        rl.prompt(true);    }    console.log('Terminal UI initialized. Type "help" for commands.');    rl.prompt();    return { log };}module.exports = { createTerminal };